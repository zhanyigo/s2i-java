#!/bin/bash -e
#
# S2I run script for the 's2i-java' image.
# The run script executes the server that runs your application.
#
# For more information see the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

TEST_MODE="${TEST_MODE:-0}"
JAVA_MAX_RAM_PERCENTAGE=${JAVA_MAX_RAM_PERCENTAGE:-85.00}
JAVA_MIN_RAM_PERCENTAGE=${JAVA_MIN_RAM_PERCENTAGE:-20.00}
JAVA_INIT_RAM_PERCENTAGE=${JAVA_INIT_RAM_PERCENTAGE:-30.00}
JACOCO_OUTPUT_PATH="${JACOCO_OUTPUT_PATH:-/opt/openshift/jacoco}"
JAVA_OPTS=${JAVA_OPTS:""}

if [ "$TEST_MODE" == "1" ]; then
    if [ "x$JACOCO_SESSION_ID" == "x" ]; then
        echo "JACOCO_SESSION_ID is null."
        exit -1;
    fi

    echo "JACOCO_OUTPUT_PATH=$JACOCO_OUTPUT_PATH"

    if [ ! -d "$JACOCO_OUTPUT_PATH/$JACOCO_SESSION_ID" ]; then
        echo "mkdir $JACOCO_OUTPUT_PATH/$JACOCO_SESSION_ID ..."
        mkdir -p "$JACOCO_OUTPUT_PATH/$JACOCO_SESSION_ID"
    fi

    mkdir -p "$JACOCO_OUTPUT_PATH/$JACOCO_SESSION_ID/source" "$JACOCO_OUTPUT_PATH/$JACOCO_SESSION_ID/classes"

    echo "Copy source code to: $JACOCO_OUTPUT_PATH/$JACOCO_SESSION_ID"
    cp -rf /opt/openshift/source/* "$JACOCO_OUTPUT_PATH/$JACOCO_SESSION_ID/source"
    echo "Copy classes to: $JACOCO_OUTPUT_PATH/$JACOCO_SESSION_ID"
    cp -rf /opt/openshift/classes/* "$JACOCO_OUTPUT_PATH/$JACOCO_SESSION_ID/classes"

    JAVA_OPTS=" -javaagent:${JACOCO_AGENT}=output=file,append=true,destfile=$JACOCO_OUTPUT_PATH/$JACOCO_SESSION_ID/jacoco.exec,sessionid=$JACOCO_SESSION_ID,excludes=*.scf.*:*.entity.*:*.entities.* $JAVA_OPTS"
fi

export JAVA_OPTS;

cd /opt/openshift && \
exec java \
    $JAVA_OPTS -Djava.security.egd=file:/dev/./urandom \
    -XX:OnOutOfMemoryError="kill -9 %p" -XX:+PrintFlagsFinal -XX:+PrintGCDetails -XX:+UseContainerSupport \
    -XX:MaxRAMPercentage=$JAVA_MAX_RAM_PERCENTAGE -XX:MinRAMPercentage=$JAVA_MIN_RAM_PERCENTAGE -XX:InitialRAMPercentage=$JAVA_INIT_RAM_PERCENTAGE  \
    $APP_OPTIONS \
    -jar /opt/openshift/app.jar \

